{"ast":null,"code":"import _asyncToGenerator from \"/Users/futorine/dev/holochain/holochain-engineers/team-mates/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/**\n * Defines AppWebsocket, an easy-to-use websocket implementation of the\n * Conductor API for apps\n *\n *    const client = AppWebsocket.connect(\n *      'ws://localhost:9000',\n *      signal => console.log('got a signal:', signal)\n *    )\n *\n *    client.callZome({...})  // TODO: show what's in here\n *      .then(() => {\n *        console.log('DNA successfully installed')\n *      })\n *      .catch(err => {\n *        console.error('problem installing DNA:', err)\n *      })\n */\nimport { decode, encode } from \"@msgpack/msgpack\";\nimport { getLauncherEnvironment } from \"../../environments/launcher.js\";\nimport { WsClient } from \"../client.js\";\nimport { catchError, DEFAULT_TIMEOUT, promiseTimeout, requesterTransformer } from \"../common.js\";\nexport class AppWebsocket {\n  client;\n  defaultTimeout;\n  overrideInstalledAppId;\n\n  constructor(client, defaultTimeout, overrideInstalledAppId) {\n    this.client = client;\n    this.defaultTimeout = defaultTimeout === undefined ? DEFAULT_TIMEOUT : defaultTimeout;\n    this.overrideInstalledAppId = overrideInstalledAppId;\n  }\n\n  static connect(url, defaultTimeout, signalCb) {\n    return _asyncToGenerator(function* () {\n      // Check if we are in the launcher's environment, and if so, redirect the url to connect to\n      const env = yield getLauncherEnvironment();\n\n      if (env) {\n        url = `ws://localhost:${env.APP_INTERFACE_PORT}`;\n      }\n\n      const wsClient = yield WsClient.connect(url, signalCb);\n      return new AppWebsocket(wsClient, defaultTimeout, env ? env.INSTALLED_APP_ID : undefined);\n    })();\n  }\n\n  _requester = (tag, transformer) => requesterTransformer((req, timeout) => promiseTimeout(this.client.request(req), tag, timeout || this.defaultTimeout).then(catchError), tag, transformer);\n  appInfo = this._requester(\"app_info\", appInfoTransform(this.overrideInstalledAppId));\n  callZome = this._requester(\"zome_call\", callZomeTransform);\n}\nconst callZomeTransform = {\n  input: req => {\n    return { ...req,\n      payload: encode(req.payload)\n    };\n  },\n  output: res => {\n    return decode(res);\n  }\n};\n\nconst appInfoTransform = overrideInstalledAppId => ({\n  input: req => {\n    if (overrideInstalledAppId) {\n      return {\n        installed_app_id: overrideInstalledAppId\n      };\n    }\n\n    return req;\n  },\n  output: res => {\n    return res;\n  }\n});","map":{"version":3,"sources":["/Users/futorine/dev/holochain/holochain-engineers/team-mates/node_modules/@holochain/client/lib/api/app/websocket.js"],"names":["decode","encode","getLauncherEnvironment","WsClient","catchError","DEFAULT_TIMEOUT","promiseTimeout","requesterTransformer","AppWebsocket","client","defaultTimeout","overrideInstalledAppId","constructor","undefined","connect","url","signalCb","env","APP_INTERFACE_PORT","wsClient","INSTALLED_APP_ID","_requester","tag","transformer","req","timeout","request","then","appInfo","appInfoTransform","callZome","callZomeTransform","input","payload","output","res","installed_app_id"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,SAASC,sBAAT,QAAuC,gCAAvC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,cAAtC,EAAsDC,oBAAtD,QAAmF,cAAnF;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,MAAM;AACNC,EAAAA,cAAc;AACdC,EAAAA,sBAAsB;;AACtBC,EAAAA,WAAW,CAACH,MAAD,EAASC,cAAT,EAAyBC,sBAAzB,EAAiD;AACxD,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GACIA,cAAc,KAAKG,SAAnB,GAA+BR,eAA/B,GAAiDK,cADrD;AAEA,SAAKC,sBAAL,GAA8BA,sBAA9B;AACH;;AACmB,SAAPG,OAAO,CAACC,GAAD,EAAML,cAAN,EAAsBM,QAAtB,EAAgC;AAAA;AAChD;AACA,YAAMC,GAAG,SAASf,sBAAsB,EAAxC;;AACA,UAAIe,GAAJ,EAAS;AACLF,QAAAA,GAAG,GAAI,kBAAiBE,GAAG,CAACC,kBAAmB,EAA/C;AACH;;AACD,YAAMC,QAAQ,SAAShB,QAAQ,CAACW,OAAT,CAAiBC,GAAjB,EAAsBC,QAAtB,CAAvB;AACA,aAAO,IAAIR,YAAJ,CAAiBW,QAAjB,EAA2BT,cAA3B,EAA2CO,GAAG,GAAGA,GAAG,CAACG,gBAAP,GAA0BP,SAAxE,CAAP;AAPgD;AAQnD;;AACDQ,EAAAA,UAAU,GAAG,CAACC,GAAD,EAAMC,WAAN,KAAsBhB,oBAAoB,CAAC,CAACiB,GAAD,EAAMC,OAAN,KAAkBnB,cAAc,CAAC,KAAKG,MAAL,CAAYiB,OAAZ,CAAoBF,GAApB,CAAD,EAA2BF,GAA3B,EAAgCG,OAAO,IAAI,KAAKf,cAAhD,CAAd,CAA8EiB,IAA9E,CAAmFvB,UAAnF,CAAnB,EAAmHkB,GAAnH,EAAwHC,WAAxH,CAA7C;AACVK,EAAAA,OAAO,GAAG,KAAKP,UAAL,CAAgB,UAAhB,EAA4BQ,gBAAgB,CAAC,KAAKlB,sBAAN,CAA5C,CAAH;AACPmB,EAAAA,QAAQ,GAAG,KAAKT,UAAL,CAAgB,WAAhB,EAA6BU,iBAA7B,CAAH;AArBc;AAuB1B,MAAMA,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAGR,GAAD,IAAS;AACZ,WAAO,EACH,GAAGA,GADA;AAEHS,MAAAA,OAAO,EAAEhC,MAAM,CAACuB,GAAG,CAACS,OAAL;AAFZ,KAAP;AAIH,GANqB;AAOtBC,EAAAA,MAAM,EAAGC,GAAD,IAAS;AACb,WAAOnC,MAAM,CAACmC,GAAD,CAAb;AACH;AATqB,CAA1B;;AAWA,MAAMN,gBAAgB,GAAIlB,sBAAD,KAA6B;AAClDqB,EAAAA,KAAK,EAAGR,GAAD,IAAS;AACZ,QAAIb,sBAAJ,EAA4B;AACxB,aAAO;AACHyB,QAAAA,gBAAgB,EAAEzB;AADf,OAAP;AAGH;;AACD,WAAOa,GAAP;AACH,GARiD;AASlDU,EAAAA,MAAM,EAAGC,GAAD,IAAS;AACb,WAAOA,GAAP;AACH;AAXiD,CAA7B,CAAzB","sourcesContent":["/**\n * Defines AppWebsocket, an easy-to-use websocket implementation of the\n * Conductor API for apps\n *\n *    const client = AppWebsocket.connect(\n *      'ws://localhost:9000',\n *      signal => console.log('got a signal:', signal)\n *    )\n *\n *    client.callZome({...})  // TODO: show what's in here\n *      .then(() => {\n *        console.log('DNA successfully installed')\n *      })\n *      .catch(err => {\n *        console.error('problem installing DNA:', err)\n *      })\n */\nimport { decode, encode } from \"@msgpack/msgpack\";\nimport { getLauncherEnvironment } from \"../../environments/launcher.js\";\nimport { WsClient } from \"../client.js\";\nimport { catchError, DEFAULT_TIMEOUT, promiseTimeout, requesterTransformer, } from \"../common.js\";\nexport class AppWebsocket {\n    client;\n    defaultTimeout;\n    overrideInstalledAppId;\n    constructor(client, defaultTimeout, overrideInstalledAppId) {\n        this.client = client;\n        this.defaultTimeout =\n            defaultTimeout === undefined ? DEFAULT_TIMEOUT : defaultTimeout;\n        this.overrideInstalledAppId = overrideInstalledAppId;\n    }\n    static async connect(url, defaultTimeout, signalCb) {\n        // Check if we are in the launcher's environment, and if so, redirect the url to connect to\n        const env = await getLauncherEnvironment();\n        if (env) {\n            url = `ws://localhost:${env.APP_INTERFACE_PORT}`;\n        }\n        const wsClient = await WsClient.connect(url, signalCb);\n        return new AppWebsocket(wsClient, defaultTimeout, env ? env.INSTALLED_APP_ID : undefined);\n    }\n    _requester = (tag, transformer) => requesterTransformer((req, timeout) => promiseTimeout(this.client.request(req), tag, timeout || this.defaultTimeout).then(catchError), tag, transformer);\n    appInfo = this._requester(\"app_info\", appInfoTransform(this.overrideInstalledAppId));\n    callZome = this._requester(\"zome_call\", callZomeTransform);\n}\nconst callZomeTransform = {\n    input: (req) => {\n        return {\n            ...req,\n            payload: encode(req.payload),\n        };\n    },\n    output: (res) => {\n        return decode(res);\n    },\n};\nconst appInfoTransform = (overrideInstalledAppId) => ({\n    input: (req) => {\n        if (overrideInstalledAppId) {\n            return {\n                installed_app_id: overrideInstalledAppId,\n            };\n        }\n        return req;\n    },\n    output: (res) => {\n        return res;\n    },\n});\n"]},"metadata":{},"sourceType":"module"}